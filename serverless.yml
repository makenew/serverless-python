---
service: serverless-python

frameworkVersion: '^3.17.0'

configValidationMode: error

plugins:
  - serverless-python-requirements

provider:
  name: aws
  deploymentMethod: direct
  architecture: arm64
  runtime: python3.9
  region: ${env:AWS_DEFAULT_REGION, 'us-east-1'}
  stage: stg
  logRetentionInDays: 30
  httpApi:
    payload: '2.0'
    disableDefaultEndpoint: true
  apiGateway:
    shouldStartNameWithService: true
  deploymentBucket:
    blockPublicAccess: true

custom:
  true: true
  false: false
  pythonRequirements:
    slim: true
    usePoetry: true
    requirePoetryLockFile: true
    useDownloadCache: true
    useStaticCache: true
    dockerizePip: ${self:custom.${env:DOCKERIZE_PIP, 'true'}}
    dockerImage: ghcr.io/mlupine/docker-lambda:${self:provider.runtime}-build-${self:provider.architecture}
    dockerRunCmdExtraArgs: ['--platform', 'linux/${self:provider.architecture}']
    cacheLocation: .serverless-python-requirements
    staticCacheMaxVersions: 1

package:
  individually: true
  patterns:
    - '!./**'
    - './LICENSE.txt'
    - './pyproject.toml'
    - './setup.py'
    - './handlers/**/*.py'
    - './makenew_serverless_python/**/*.py'
    - '!./**/*_test.py'

functions:
  todo:
    url: true
    handler: handlers/todo.main
