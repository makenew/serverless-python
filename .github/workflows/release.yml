---
name: release

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment to release
        required: true
      ref:
        description: Ref to release
        required: true
        default: master
  repository_dispatch:
    types:
      - release

jobs:
  predeploy:
    runs-on: ubuntu-20.04
    outputs:
      deployment_id: ${{ steps.deployment.outputs.deployment_id }}
    steps:
      - name: Start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          env: ${{ github.event.inputs.environment }}${{ github.event.client_payload.environment }}
          desc: ${{ github.event.client_payload.ref }}${{ github.event.client_payload.ref }}
          ref: ${{ github.event.client_payload.ref }}${{ github.event.inputs.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
  postdeploy:
    needs: deploy
    runs-on: ubuntu-20.04
    steps:
      - name: Finish deployment
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          status: ${{ job.status }}
          deployment_id: ${{ needs.predeploy.outputs.deployment_id }}
          token: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    needs: predeploy
    runs-on: ubuntu-20.04
    container:
      image: lambci/lambda:build-python3.8
      env:
        DOCKERIZE_PIP: 'false'
        POETRY_VERSION: 1.1.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Install Poetry
        run: |
          export POETRY_HOME=$HOME/.local/share/poetry
          export PATH=$HOME/.local/share/poetry/bin:$PATH
          mkdir -p $POETRY_HOME
          curl -fsSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - name: Install Node.js
        run: curl -fsSL https://lambci.s3.amazonaws.com/fs/nodejs12.x.tgz | tar -zx -C /
      - name: Install Dependencies
        run: npm ci
      - name: Serverless deploy to production from ${{ github.event.client_payload.ref }}${{ github.event.inputs.ref }}
        run: npm run deploy
        if: ${{ github.event.inputs.environment == 'production' || github.event.client_payload.environment == 'production' }}
        env:
          SERVERLESS_STAGE: prod
      - name: Serverless deploy to staging from ${{ github.event.client_payload.ref }}${{ github.event.inputs.ref }}
        run: npm run deploy
        if: ${{ github.event.inputs.environment == 'staging' || github.event.client_payload.environment == 'staging' }}
        env:
          SERVERLESS_STAGE: stg
