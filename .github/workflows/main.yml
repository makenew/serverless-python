---
name: main

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6
      - name: Setup Poetry
        uses: gr1n/setup-poetry@v4
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install
      - name: Test
        run: make test
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6
      - name: Setup Poetry
        uses: gr1n/setup-poetry@v4
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install
      - name: Lint
        run: make lint
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.6
      - name: Setup Poetry
        uses: gr1n/setup-poetry@v4
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: poetry install
      - name: Build
        run: make build
  serverless:
    runs-on: ubuntu-20.04
    container:
      image: lambci/lambda:build-python3.8
      env:
        DOCKERIZE_PIP: 'false'
        POETRY_VERSION: 1.1.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Poetry
        run: |
          export POETRY_HOME=$HOME/.local/share/poetry
          export PATH=$HOME/.local/share/poetry/bin:$PATH
          mkdir -p $POETRY_HOME
          curl -fsSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - name: Install Node.js
        run: curl -fsSL https://lambci.s3.amazonaws.com/fs/nodejs12.x.tgz | tar -zx -C /
      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - name: Install Dependencies
        run: npm ci
      - name: Serverless package
        run: npm run build
